name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: 'superuser'
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        name: Unit Testing
        container:
          image: node:20

        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
    
        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with:
            key: "${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}"
            path: node_modules

        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          if: always()
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    
    code-coverage:
      name: Run Coverage
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 18
    
        - name: Install Dependencies
          run: npm install

        - name: Run Coverage
          continue-on-error: true
          run: npm run coverage

        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5

    docker:
      needs: [code-coverage, unit-testing]
      runs-on: ubuntu-latest
      permissions: 
        packages: write
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Build and push
          uses: docker/build-push-action@v6
          with:
            context: .
            push: true
            tags: ghcr.io/terminator96/solar-system:${{ github.sha }}
    
    dev-deploy:
      runs-on: [ubuntu-latest]

      needs: docker
      environment: 
        name: development
      outputs:
        APP_INGRESS_URL: ${{ steps.ip_ingress.outputs.INGRESS_IP }}
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Install Kubectl
          uses: azure/setup-kubectl@v4
          with:
            version: 'v1.28.1'

        - name: Set Kube Context
          uses: azure/k8s-set-context@v4
          with:
            method: kubeconfig
            kubeconfig: ${{ secrets.KUBECONFIG }}
        
        - name: kubectl command
          continue-on-error: true
          run: kubectl version -o yaml

        - name: Get IP Ingress
          continue-on-error: true
          id: ip_ingress
          run: |
            echo "INGRESS_IP=localhost" >> "$GITHUB_OUTPUT"

        - uses: cschleiden/replace-tokens@v1
          with:
            tokenPrefix: '_{_'
            tokenSuffix: '_}_'
            files: 'kubernetes/development/**'
          env:
            NAMESPACE: ${{ vars.NAMESPACE }}
            REPLICAS: ${{ vars.REPLICAS }}
            IMAGE: ghcr.io/terminator96/solar-system:${{ github.sha }}

        - name: Print Files
          run: cat kubernetes/development/*.yaml

    integration-testing:
      needs: dev-deploy
      uses: ./.github/workflows/reusable-workflow.yml
      with:
        ingress-url: ${{ needs.dev-deploy.outputs.APP_INGRESS_URL }}


